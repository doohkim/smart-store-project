# Generated by Django 2.2.16 on 2020-09-28 22:06

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import members.models
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='KIUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('login_by', models.CharField(choices=[('kakao', 'Kakao'), ('naver', 'Naver'), ('google', 'Google'), ('email', 'Email'), ('username', 'Username'), ('admin', 'Admin')], max_length=20, verbose_name='로그인 방법')),
                ('nickname', models.CharField(max_length=100, unique=True, verbose_name='닉네임')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='이메일')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(help_text='핸드폰 번호', max_length=15, region=None, unique=True)),
                ('birth_date', models.DateField(default=django.utils.timezone.now, verbose_name='생년월일')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], default='male', max_length=10)),
                ('address', models.TextField(default='', help_text='주소')),
                ('point', models.IntegerField(default=0, verbose_name='유저 포인트')),
                ('recommand_code', models.CharField(default='', max_length=30, verbose_name='추천 코드')),
                ('clause_agree', models.BooleanField(default=True, verbose_name='회원가입 약관 동의')),
                ('marketing_agree', models.BooleanField(default=False, verbose_name='마케팅 동의')),
                ('push_agree', models.BooleanField(default=False, verbose_name='알람')),
            ],
            options={
                'verbose_name': '사용자',
                'verbose_name_plural': '사용자 목록',
            },
            managers=[
                ('objects', members.models.KIUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '키워드',
                'verbose_name_plural': '키워드 목록',
            },
        ),
        migrations.CreateModel(
            name='KeywordFavorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('liked', models.BooleanField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keyword_favorite', to='members.Keyword')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '좋아요',
                'verbose_name_plural': '좋아요 목록',
            },
        ),
        migrations.AddField(
            model_name='kiuser',
            name='favorites',
            field=models.ManyToManyField(help_text='키워드 즐겨찾기 좋아요', related_name='users', through='members.KeywordFavorite', to='members.Keyword'),
        ),
        migrations.AddField(
            model_name='kiuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='kiuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
