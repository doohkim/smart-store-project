"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 2.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import json

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
ROOT_DIR = os.path.dirname(BASE_DIR)
# FRONT_DIR = os.path.join(ROOT_DIR, 'front', 'build')
# print('FRONT_DIR', FRONT_DIR)

with open(ROOT_DIR + '/secrets.json') as f:
    SECRETS_FULL = json.load(f)

SECRET_KEY = SECRETS_FULL['base']['SECRET_KEY']
NAVER_KEYWORD_API = SECRETS_FULL['api']['NAVER_KEYWORD_API']
NAVER_SHOP_API = SECRETS_FULL['api']['NAVER_SHOP_API']
ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'phonenumber_field',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_auth',

    'corsheaders',
    'requests',
    'django.contrib.sites',

    'members.apps.MembersConfig',
    'search.apps.SearchConfig',
]

MIDDLEWARE = [

    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            # FRONT_DIR
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = False

AUTH_USER_MODEL = 'members.KIUser'

# email verify
EMAIL_BACKEND = SECRETS_FULL['base']['EMAIL_BACKEND']
EMAIL_HOST = SECRETS_FULL['base']['EMAIL_HOST']
# 메일을 호스트하는 서버
EMAIL_PORT = SECRETS_FULL['base']['EMAIL_PORT']
# gmail과의 통신하는 포트
EMAIL_HOST_USER = SECRETS_FULL['base']['EMAIL_HOST_USER']
# 발신할 이메일
EMAIL_HOST_PASSWORD = SECRETS_FULL['base']['EMAIL_HOST_PASSWORD']
# 발신할 메일의 비밀번호
EMAIL_USE_TLS = True
# TLS 보안 방법
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
# 사이트와 관련한 자동응답을 받을 이메일 주소,'webmaster@localhost'


# DJANGO-PHONENUMBER-FIELD
PHONENUMBER_DB_FORMAT = 'NATIONAL'
PHONENUMBER_DEFAULT_REGION = 'KR'

# django authentication
AUTHENTICATION_BACKENDS = (

    'django.contrib.auth.backends.ModelBackend',
)

# REST_FRAMEWORK
REST_FRAMEWORK = {
    # 'DATE_INPUT_FORMATS': ['iso-8601', '%Y-%m-%d'],
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',  # <-- And here
    ],
}

# 개발자가 관리하는 파일들
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
# STATICFILES_DIRS = [
#     os.path.join(FRONT_DIR, 'static')
# ]
# 사용자가 업로드한 파일 관리
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# print(MEDIA_ROOT)

# # s3 static settings
# STATIC_LOCATION = 'static'
# STATICFILES_STORAGE = 'config.storages.S3StaticStorage'
# STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{STATIC_LOCATION}/'

# # s3 media settings
# DEFAULT_FILE_STORAGE = 'config.storages.S3MediaStorage'
# MEDIA_LOCATION = 'media'
# MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{MEDIA_LOCATION}/'


SITE_ID = 1

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_WHITELIST = (
    'http://18.188.83.127:5000',
    # 'http://localhost:3000',
    'http://localhost:5000',
    # 'http://localhost:8000',
    'http://127.0.0.1:5000',

)
